@page "/userprofile"

@using CapstoneDraft.Models;
@using CapstoneDraft.Services;
@using Microsoft.AspNetCore.Identity;

@inject AuthenticationStateProvider AuthenticationStateProvider
@inject NavigationManager NavigationManager
@inject UserManager<UserModel> UserManager
@inject SignInManager<UserModel> LoginManager

<div class="fullsize-container">
    <div class="social-media-container">
        <div class="social-media-card">
            <h1>Edit Profile</h1>
        <EditForm Model="@userModel" OnValidSubmit="UpdateUserProfileAsync">
            <DataAnnotationsValidator />
            <ValidationSummary />
                <div class="custom-form-elements">
                <label for="firstName">First Name:</label>
                    <InputText id="firstName" @bind-Value="@userModel.FirstName" class="custom-input-elements" />
            </div>
                <div class="custom-form-elements">
                <label for="lastName">Last Name:</label>
                    <InputText id="lastName" @bind-Value="@userModel.LastName" class="custom-input-elements" />
            </div>
            <div class="custom-form-elements">
                <label for="email">E-Mail Address:</label>
                    <InputText id="email" @bind-Value="@userModel.Email" class="custom-input-elements" />
            </div>
            <div class="custom-form-elements">
                <label for="phone">Phone Number:</label>
                <InputText id="phone" @bind-Value="@userModel.PhoneNumber" class="custom-input-elements" />
            </div>
            <div class="custom-form-elements">
                <button type="submit" class="yellow-animated-button">Save Changes!</button>
            </div>
        </EditForm>
            <h2>Update Password</h2>
            <EditForm Model="@changeUserPassword" OnValidSubmit="UpdatePasswordAsync">
                <div class="custom-form-elements">
                    <label for="currentPassword">Current Password:</label>
                    <InputText id="currentPassword" @bind-Value="@changeUserPassword.CurrentPassword" class="custom-input-elements" />
                </div>
                <div class="custom-form-elements">
                    <label for="newPassword">New Password:</label>
                    <InputText id="newPassword" @bind-Value="@changeUserPassword.NewPassword" class="custom-input-elements" />
                </div>
                <div class="custom-form-elements">
                    <button type="submit" class="yellow-animated-button">Update Password!</button>
                </div>
            </EditForm>
        </div>
    </div>
</div>

@code {
    private UserModel userModel = new();
    private ChangeUserPassword changeUserPassword = new();
    private bool DisplayPasswordChangeMessage = false; // Display a success message to let use know password has been update
    private bool DisplayErrorMessage = false;
    private bool DisplayProfileUpdatedMessage = false;

    // Class to hold the current password and new password which will be used in ChangePasswordAsync built-in ASP Core method
    public class ChangeUserPassword
    {
        public string CurrentPassword { get; set; }
        public string NewPassword { get; set; }
    }

    private async Task UpdatePasswordAsync()
    {
        // Use built in ChangePasswordAsync method to update new password in the database and display success message to user
        await UserManager.ChangePasswordAsync(userModel, changeUserPassword.CurrentPassword, changeUserPassword.NewPassword);
        DisplayPasswordChangeMessage = true;
    }

    private async Task UpdateUserProfileAsync()
    {
        IdentityResult profileSuccessfullyUpdated = await UserManager.UpdateAsync(userModel);
        if (profileSuccessfullyUpdated.Succeeded)
        {
            DisplayProfileUpdatedMessage = true;
            return;
        }
        else
        {
            DisplayErrorMessage = true;
        }
    }
}