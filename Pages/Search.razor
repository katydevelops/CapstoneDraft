@page "/search"
@using CapstoneDraft.Models
@using CapstoneDraft.Services
@using System.Text.RegularExpressions;


@inject PostService PostService
@inject NavigationManager NavigationManager

<div class="fullsize-container">
    <div class="social-media-container">
        <div class="social-media-card">
            <h2>Search User Posts and Comments</h2>
            <form @onsubmit="SearchPostsAndCommentsAsync">
                <input type="text" @bind="searchQuery" placeholder="Enter your search query!" class="custom-input-elements" />
                <button type="submit" class="yellow-animated-button">Search!</button>
            </form>
        </div>
    </div>
</div>


@code {
    private string searchQuery;
    private List<PostModel> queryResults;
    private string searchResultsErrorMessage;

    private async Task SearchPostsAndCommentsAsync()
    {
        // Clear old error message
        searchResultsErrorMessage = string.Empty;
        try
        {
            queryResults = await PostService.QueryPostsAndCommentsAsync(searchQuery);
        }
        catch
        {
            searchResultsErrorMessage = "There was an error while retrieving your search result - please try again!";
        }
    }

    private string HighlightSearchQuery(string text, string searchedQuery)
    {
        // To be able to include searches where the user includes spaces, need to split at the white space to search multiple words
        if (string.IsNullOrWhiteSpace(searchedQuery)) return text;
        string[] searchedWordsWithoutSpace = searchedQuery.Split(new char[] { ' ' }, StringSplitOptions.RemoveEmptyEntries);
        // Highlight the searched words after the white space is removed and ignore case sensitivity
        foreach (string word in searchedWordsWithoutSpace)
        {
            text = Regex.Replace(text, word, $@"<span class='highlight-search-query'>{word}</span>", RegexOptions.IgnoreCase);
        }
        return text;
    }
}