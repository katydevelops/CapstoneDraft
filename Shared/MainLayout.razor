@inherits LayoutComponentBase

@using CapstoneDraft.Models;

@inject NavigationManager NavigationManager
@inject SignInManager<UserModel> SignInManager
@inject ILogger<MainLayout> Logger



<PageTitle>Safety Net</PageTitle>

<nav class="navbar">
    <a href="/feed" class="nav-link">Feed</a>
    <a href="/userprofile" class="nav-link">Profile</a>
    <a href="/reports" class="nav-link">Reports</a>
    <a href="/search" class="nav-link">Search</a>
    <a href="/" class="nav-link">Logout</a>
    <button class="logout-button" @onclick="BeginLogout">Logout</button>

</nav>

<div>
    @Body
</div>

<footer class="border-top-0 footer">
    <div class="container">
        &copy; 2024 - Safety Net Workplace Safety Application
    </div>
</footer>

@code {
    private TaskCompletionSource<bool> _logoutCompletionSource;

    private void BeginLogout()
    {
        Logger.LogInformation("BeginLogout method called");
        if (_logoutCompletionSource == null || _logoutCompletionSource.Task.IsCompleted)
        {
            _logoutCompletionSource = new TaskCompletionSource<bool>();
            _logoutCompletionSource.Task.ContinueWith(async _ =>
            {
                await Logout();
            }, TaskScheduler.Default);
        }

        _logoutCompletionSource.SetResult(true);
    }

    private async Task Logout()
    {
        try
        {
            Logger.LogInformation("Logout method called");
            await SignInManager.SignOutAsync();
            Logger.LogInformation("Sign out successful, navigating to login page.");
            NavigationManager.NavigateTo("/login", forceLoad: true);
        }
        catch (Exception ex)
        {
            Logger.LogError(ex, "Error occurred during logout");
        }
    }
}